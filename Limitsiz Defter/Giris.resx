<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cikispb.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>